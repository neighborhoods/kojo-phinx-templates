<?php
declare(strict_types=1);
$namespaceDefinition
use Neighborhoods\Product\Component as Component;
use $useClassName;

final class $className  extends $baseClassName
{
    public function run()
    {
        $now = (new DateTime())->format('Y-m-d H:i:s');
        $type_code = Component\WorkerInterface::JOB_TYPE_CODE;
        $job_type = $this->fetchRow("SELECT * FROM kojo_job_type where type_code = '$type_code'");
        $this->table('kojo_job')->insert([
            'type_code' => $type_code,
            'name' => $job_type['name'],
            'priority' => $job_type['default_importance'],
            'importance' => $job_type['default_importance'],
            'work_at_date_time' => $now,
            'next_state_request' => 'working',
            'assigned_state' => 'waiting',
            'previous_state' => 'new',
            'worker_uri' => $job_type['worker_uri'],
            'worker_method' => $job_type['worker_method'],
            'can_work_in_parallel' => $job_type['can_work_in_parallel'],
            'last_transition_date_time' => $now,
            'last_transition_micro_time' => hrtime(true),
            'times_worked' => 0,
            'times_retried' => 0,
            'times_held' => 0,
            'times_crashed' => 0,
            'times_panicked' => 0,
            'created_at_date_time' => $now,
        ])->saveData();
    }
}
